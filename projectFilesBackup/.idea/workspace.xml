<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e24e0d33-1c7a-4753-b72c-dff667bdf7c0" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/TECHNICAL_REPORT.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__nrepl_1_0_0.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_clojure_clojure_1_11_1.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_clojure_core_specs_alpha_0_2_62.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_clojure_spec_alpha_0_3_218.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_nrepl_incomplete_0_1_0.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CHANGELOG.md" beforeDir="false" afterPath="$PROJECT_DIR$/CHANGELOG.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LICENSE" beforeDir="false" afterPath="$PROJECT_DIR$/LICENSE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure-test.iml" beforeDir="false" afterPath="$PROJECT_DIR$/clojure-ica.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/doc/intro.md" beforeDir="false" afterPath="$PROJECT_DIR$/doc/intro.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project.clj" beforeDir="false" afterPath="$PROJECT_DIR$/project.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week1/Homework1.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week1/Homework2.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week1/Homework3.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week1/Lecture1_20.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week1/Lecture1_22.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week2/Lecture_2_1.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week2/Lecture_2_InterviewTask1.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week2/Lecture_2_InterviewTask2.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week4/Narrator2.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week4/Palindromes2clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week4/Palindromes3.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week4/Palindromes4.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week4/SatelliteTransmit.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week4/TheLongestPalindrome.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_homeworks/Week4/TheLongestPalindrome2.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_ica/.gitattributes" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_ica/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_ica/.lsp/.cache/db.transit.json" beforeDir="false" afterPath="$PROJECT_DIR$/src/clojure_ica/.lsp/.cache/db.transit.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_ica/Adapters/CsvDataAdapter.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/clojure_ica/Adapters/CsvDataAdapter.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_ica/Core/Core.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/clojure_ica/Core/Core.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_ica/Core/Entities.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/clojure_ica/Core/Entities.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_ica/LICENSE" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_ica/Main.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/clojure_ica/Main.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_ica/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_ica/TECHNICAL_REPORT.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W0/Borsch.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W0/Pizza.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W0/TheSortingHat.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W2/Needle.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W2/Test2.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W3/Hex_task.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W3/mm_heroes_task_draft.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W3/mm_heroes_task_length_based.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W3/mm_heroes_task_weight_based.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W4/Narrator.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W4/Palindromes.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W4/SlidingWindow.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W4/SlidingWindowValues.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W5/CaesarCypher.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W5/CaesarCypherBreak.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W5/MafiaTask1.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W5/MafiaTask2.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W5/Permutations.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W5/TowerOfHanoi.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W6/BFS_SEARCHER/BFS_SEARCHER.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W6/BFS_SEARCHER/tree_init_data.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W6/Lab.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W6/Oregon/BFS_SEARCHER.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W6/Oregon/DFS_SEARCHER.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W6/Oregon/Kernel.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W6/Oregon/NodeDataAdapter.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W6/Oregon/oregon_trail_init_data.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clojure_test/W7/Islands.clj" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2VsdRJ6RoU7i1aGChJogakV5LZJ" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "cursive.last.file.extension.C\\:/Users/Admin/Documents/ClojureProjects/clojure-test/src": "clj",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "C:/Users/Admin/Documents/ClojureProjects/clojure-test - Copy",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "run.code.analysis.last.selected.profile": "pProject Default",
    "settings.editor.selected.configurable": "project.propVCSSupport.DirectoryMappings"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Admin\Documents\ClojureProjects\clojure-test\src\clojure_test\W9\lesson2" />
      <recent name="C:\Users\Admin\Documents\ClojureProjects\clojure-test\src\PCU_SC_ICA_1_2023\Adapters" />
      <recent name="C:\Users\Admin\Documents\ClojureProjects\clojure-test\src\clojure_test\W9" />
      <recent name="C:\Users\Admin\Documents\ClojureProjects\clojure-test\src\PCU_SC_ICA_1_2023" />
      <recent name="C:\Users\Admin\Documents\ClojureProjects\clojure-test\src\clojure_test\W8" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Admin\Documents\ClojureProjects\clojure-test - Copy" />
      <recent name="C:\Users\Admin\Documents\ClojureProjects\clojure-test\src\clojure_test\W8\Osmos" />
      <recent name="C:\Users\Admin\Documents\ClojureProjects\clojure-test\src\clojure_test\W7\Osmos" />
      <recent name="C:\Users\Admin\Documents\ClojureProjects\clojure-test\src\clojure_ICA_1\Datasets" />
      <recent name="C:\Users\Admin\Documents\ClojureProjects\clojure-test\src\clojure_ICA_1" />
    </key>
  </component>
  <component name="ReplState" timestamp="1700781852389">{:repl-history {:ide [], :local [{:command &quot;(+ 50 38 128)&quot;, :offset 13, :ns &quot;user&quot;} {:command &quot;(- 2777 87)&quot;, :offset 11, :ns &quot;user&quot;} {:command &quot;(load-file \&quot;src/PCU_SC_ICA_1_2023/Main.clj\&quot;)&quot;, :offset 44, :ns &quot;user&quot;} {:command &quot;(prepare -travel-plan \&quot;Prague\&quot; \&quot;Berlin\&quot; \&quot;g\&quot;)&quot;, :offset 44, :ns &quot;user&quot;} {:command &quot;(use PCU_SC_ICA_1_2023.Main)&quot;, :offset 28, :ns &quot;user&quot;} {:command &quot;(slurp (clojure.java.io/reader \&quot;flights-ICA1.csv\&quot;))&quot;, :offset 51, :ns &quot;PCU_SC_ICA_1_2023.Main&quot;} {:command &quot;(slurp (clojure.java.io/reader \&quot;/flights-ICA1.csv\&quot;))&quot;, :offset 52, :ns &quot;PCU_SC_ICA_1_2023.Main&quot;} {:command &quot;(slurp (clojure.java.io/reader \&quot;./flights-ICA1.csv\&quot;))&quot;, :offset 53, :ns &quot;PCU_SC_ICA_1_2023.Main&quot;} {:command &quot;(slurp (clojure.java.io/reader \&quot;C:\\\\Users\\\\Admin\\\\Documents\\\\ClojureProjects\\\\clojure-test\\\\src\\\\PCU_SC_ICA_1_2023\\\\flights-ICA1.csv\&quot;))&quot;, :offset 135, :ns &quot;PCU_SC_ICA_1_2023.Main&quot;} {:command &quot;(slurp (clojure.java.io/reader \&quot;PCU_SC_ICA_1_2023/flights-ICA1.csv\&quot;))&quot;, :offset 69, :ns &quot;PCU_SC_ICA_1_2023.Main&quot;} {:command &quot;(slurp (clojure.java.io/reader \&quot;./PCU_SC_ICA_1_2023/flights-ICA1.csv\&quot;))&quot;, :offset 71, :ns &quot;PCU_SC_ICA_1_2023.Main&quot;} {:command &quot;(slurp (clojure.java.io/reader \&quot;src/PCU_SC_ICA_1_2023/flights-ICA1.csv\&quot;))\n&quot;, :offset 73, :ns &quot;PCU_SC_ICA_1_2023.Main&quot;} {:command &quot;(ns)&quot;, :offset 4, :ns &quot;PCU_SC_ICA_1_2023.Main&quot;} {:command &quot;*ns*&quot;, :offset 4, :ns &quot;PCU_SC_ICA_1_2023.Main&quot;} {:command &quot;\n(use 'PCU_SC_ICA_1_2023.Main)&quot;, :offset 30, :ns &quot;user&quot;} {:command &quot;*ns* &quot;, :offset 5, :ns &quot;user&quot;} {:command &quot;(use 'PCU_SC_ICA_1_2023.Main)&quot;, :offset 29, :ns &quot;user&quot;} {:command &quot;(in-ns 'PCU_SC_ICA_1_2023.Main)&quot;, :offset 31, :ns &quot;user&quot;} {:command &quot;(slurp (clojure.java.io/reader \&quot;src/PCU_SC_ICA_1_2023/Datasets/flights-ICA1.csv\&quot;))\n&quot;, :offset 0} {:command &quot;(use 'clojure_ica.Main)&quot;, :offset 23, :ns &quot;user&quot;} {:command &quot;(in-ns 'clojure_ica.Main)&quot;, :offset 25, :ns &quot;user&quot;} {:command &quot;(prepare-travel-plan \&quot;Prague\&quot; \&quot;Berlin\&quot; \&quot;g\&quot;)&quot;, :offset 43, :ns &quot;clojure_ica.Main&quot;}], :remote []}}</component>
  <component name="RunManager" selected="Clojure Application.clojure_ica.Main">
    <configuration default="true" type="Babashka" factoryName="BabashkaLocalRepl" activateToolWindowBeforeRun="false">
      <setting name="displayName" value="" />
      <setting name="bbPath" value="" />
      <setting name="parameters" value="" />
      <option name="PARENT_ENVS" value="true" />
      <setting name="workingDir" value="" />
      <setting name="focusEditor" value="false" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="REPL" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <option name="configVersion" value="1" />
      <option name="displayName" value="REPL" />
      <module name="clojure-ica" />
      <option name="options" />
      <option name="profiles" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <option name="configVersion" value="1" />
      <option name="options" />
      <option name="profiles" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="displayName" value="" />
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="SOCKET" />
      <setting name="configType" value="SPECIFY" />
      <setting name="replPortFileType" value="STANDARD" />
      <setting name="customPortFile" value="" />
      <setting name="fixLineNumbers" value="false" />
      <setting name="focusEditor" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="PCU_SC_ICA_1_2023.Main" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <option name="configVersion" value="1" />
      <module name="clojure-ica" />
      <option name="options" />
      <option name="profiles" />
      <option name="scriptPath" value="$PROJECT_DIR$/src/PCU_SC_ICA_1_2023/Main.clj" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/PCU_SC_ICA_1_2023" />
      <method v="2" />
    </configuration>
    <configuration name="clojure-test.W9.CreditRating" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <option name="configVersion" value="1" />
      <module name="clojure-ica" />
      <option name="options" />
      <option name="profiles" />
      <option name="scriptPath" value="$PROJECT_DIR$/src/clojure_test/W9/CreditRating.clj" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/clojure_test/W9" />
      <method v="2" />
    </configuration>
    <configuration name="clojure-test.W9.Superheroes" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <option name="configVersion" value="1" />
      <module name="clojure-ica" />
      <option name="options" />
      <option name="profiles" />
      <option name="scriptPath" value="$PROJECT_DIR$/src/clojure_test/W9/Superheroes.clj" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/clojure_test/W9" />
      <method v="2" />
    </configuration>
    <configuration name="clojure-test.W9.lesson2.payments" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <option name="configVersion" value="1" />
      <module name="clojure-ica" />
      <option name="options" />
      <option name="profiles" />
      <option name="scriptPath" value="$PROJECT_DIR$/src/clojure_test/W9/lesson2/payments.clj" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/clojure_test/W9/lesson2" />
      <method v="2" />
    </configuration>
    <configuration name="clojure_ica.Main" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <option name="configVersion" value="1" />
      <module name="clojure-ica" />
      <option name="options" />
      <option name="profiles" />
      <option name="scriptPath" value="$PROJECT_DIR$/src/clojure_ica/Main.clj" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/clojure_ica" />
      <method v="2" />
    </configuration>
    <configuration name="leiningen run" type="LeiningenRunConfiguration" factoryName="Leiningen">
      <option name="execution" value="LEININGEN" />
      <module name="clojure-ica" />
      <option name="options" />
      <option name="profiles" />
      <option name="PROGRAM_PARAMETERS" value="run" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Clojure Application.clojure_ica.Main" />
      <item itemvalue="Clojure Application.clojure-test.W9.lesson2.payments" />
      <item itemvalue="Clojure Application.clojure-test.W9.CreditRating" />
      <item itemvalue="Clojure Application.clojure-test.W9.Superheroes" />
      <item itemvalue="Clojure Application.PCU_SC_ICA_1_2023.Main" />
      <item itemvalue="Clojure REPL.REPL" />
      <item itemvalue="Leiningen.leiningen run" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure Application.clojure_ica.Main" />
        <item itemvalue="Clojure Application.clojure-test.W9.lesson2.payments" />
        <item itemvalue="Clojure Application.clojure-test.W9.Superheroes" />
        <item itemvalue="Clojure Application.PCU_SC_ICA_1_2023.Main" />
        <item itemvalue="Clojure Application.clojure-test.W9.CreditRating" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e24e0d33-1c7a-4753-b72c-dff667bdf7c0" name="Changes" comment="" />
      <created>1695628713082</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1695628713082</updated>
    </task>
    <servers />
  </component>
  <component name="UnknownFeatures">
    <option featureType="dependencySupport" implementationName="executable:docker" />
    <option featureType="dependencySupport" implementationName="executable:kubectl" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>